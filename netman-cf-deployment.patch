diff --git a/cf-deployment.yml b/cf-deployment.yml
index 2cb03b9..8a54a91 100644
--- a/cf-deployment.yml
+++ b/cf-deployment.yml
@@ -239,6 +239,9 @@ instance_groups:
           - name: diego
             username: diego
             password: "((cf_mysql_mysql_seeded_databases_diego_password))"
+          - name: network_policy
+            username: network_policy
+            password: "((cf_mysql_mysql_seeded_databases_network_policy_password))"
           - name: routing-api
             username: routing-api
             password: "((cf_mysql_mysql_seeded_databases_routing_password))"
@@ -359,6 +362,7 @@ instance_groups:
             - routing.router_groups.write
             - scim.read
             - scim.write
+            - network.admin
         login:
           client_secret: "((uaa_login_client_secret))"
         jwt:
@@ -380,7 +384,7 @@ instance_groups:
             authorized-grant-types: password,refresh_token
             override: true
             refresh-token-validity: 2592000
-            scope: cloud_controller.read,cloud_controller.write,openid,password.write,cloud_controller.admin,scim.read,scim.write,doppler.firehose,uaa.user,routing.router_groups.read,routing.router_groups.write
+            scope: network.admin,cloud_controller.read,cloud_controller.write,openid,password.write,cloud_controller.admin,scim.read,scim.write,doppler.firehose,uaa.user,routing.router_groups.read,routing.router_groups.write
           cloud_controller_username_lookup:
             authorities: scim.userids
             authorized-grant-types: client_credentials
@@ -412,6 +416,17 @@ instance_groups:
             authorities: routing.routes.read,routing.router_groups.read
             authorized-grant-types: client_credentials,refresh_token
             secret: "((uaa_clients_tcp_router_secret))"
+          network-policy:
+            authorities: uaa.resource,cloud_controller.admin_read_only
+            authorized-grant-types: client_credentials,refresh_token
+            secret: "((uaa_clients_network_policy_secret))"
+          datadog-firehose-nozzle: # for shipping loggregator metrics to datadog
+            access-token-validity: 1209600
+            authorized-grant-types: authorization_code,client_credentials,refresh_token
+            override: true
+            secret: "((uaa_clients_datadog_firehose_nozzle_secret))"
+            scope: openid,oauth.approvals,doppler.firehose
+            authorities: oauth.login,doppler.firehose
       uaadb:
         address: 10.0.31.193
         databases:
@@ -540,8 +555,12 @@ instance_groups:
         default_container_grace_time: 0
         deny_networks:
         - 0.0.0.0/0
+        destroy_containers_on_startup: true
         persistent_image_list:
         - "/var/vcap/packages/cflinuxfs2/rootfs"
+        network_plugin: /var/vcap/packages/runc-cni/bin/garden-external-networker
+        network_plugin_extra_args:
+        - --configFile=/var/vcap/jobs/garden-cni/config/adapter.json
   - name: rep
     release: diego
     properties:
@@ -552,6 +571,92 @@ instance_groups:
           - cflinuxfs2:/var/vcap/packages/cflinuxfs2/rootfs
         ssl:
           skip_cert_verify: true
+  - name: garden-cni
+    release: netman
+    properties:
+      garden-cni:
+        cni_plugin_dir: /var/vcap/packages/flannel/bin
+        cni_config_dir: /var/vcap/jobs/cni-flannel/config/cni
+  - name: cni-flannel
+    release: netman
+    properties:
+      cni-flannel:
+        etcd_endpoints:
+          - etcd.service.cf.internal
+        etcd_client_cert: "((etcd_client.certificate))"
+        etcd_client_key: "((etcd_client.private_key))"
+        etcd_ca_cert: "((etcd_client.ca))"
+        flannel:
+          etcd:
+            require_ssl: "true"
+  - name: netmon
+    release: netman
+  - name: vxlan-policy-agent
+    release: netman
+    properties:
+      vxlan-policy-agent:
+        policy_server_url: https://policy-server.service.cf.internal:4003
+        ca_cert: "((network_policy_client.ca))"
+        client_cert: "((network_policy_client.certificate))"
+        client_key: "((network_policy_client.private_key))"
+  - name: metron_agent
+    release: loggregator
+    properties: *metron_agent_properties
+- name: policy-server
+  azs:
+  - z1
+  - z2
+  instances: 2
+  vm_type: t2.small
+  stemcell: default
+  networks:
+  - name: private
+  jobs:
+  - name: policy-server
+    release: netman
+    properties:
+      policy-server:
+        uaa_client_secret: "((uaa_clients_network_policy_secret))"
+        skip_ssl_validation: true
+        ca_cert: "((network_policy_server.ca))"
+        server_cert: "((network_policy_server.certificate))"
+        server_key: "((network_policy_server.private_key))"
+  - name: route_registrar
+    release: routing
+    properties:
+      route_registrar:
+        routes:
+        - name: policy-server
+          port: 4002
+          registration_interval: 20s
+          uris:
+          - "api.((system_domain))/networking"
+      nats:
+        machines: *nats_machines
+        password: "((nats_password))"
+        port: 4222
+        user: nats
+  - name: consul_agent
+    release: consul
+    properties:
+      consul:
+        agent:
+          mode: client
+          domain: cf.internal
+          servers: *consul_machines
+          services:
+            policy-server:
+              name: policy-server
+              check:
+                interval: 5s
+                script: /bin/true
+        encrypt_keys:
+        - "((consul_encrypt_key))"
+        agent_cert: "((consul_agent.certificate))"
+        agent_key: "((consul_agent.private_key))"
+        ca_cert: "((consul_agent.ca))"
+        server_cert: "((consul_server.certificate))"
+        server_key: "((consul_server.private_key))"
   - name: metron_agent
     release: loggregator
     properties: *metron_agent_properties
@@ -1373,6 +1478,8 @@ variables:
   type: password
 - name: cf_mysql_mysql_seeded_databases_diego_password
   type: password
+- name: cf_mysql_mysql_seeded_databases_network_policy_password
+  type: password
 - name: cf_mysql_mysql_seeded_databases_routing_password
   type: password
 - name: cf_mysql_mysql_seeded_databases_uaa_password
@@ -1399,6 +1506,10 @@ variables:
   type: password
 - name: uaa_clients_gorouter_secret
   type: password
+- name: uaa_clients_network_policy_secret
+  type: password
+- name: uaa_clients_datadog_firehose_nozzle_secret
+  type: password
 - name: uaa_clients_ssh-proxy_secret
   type: password
 - name: uaa_clients_tcp_emitter_secret
@@ -1417,6 +1528,24 @@ variables:
   type: ssh
 - name: uaa_jwt_signing_key
   type: rsa
+- name: network_policy_ca
+  type: certificate
+  options:
+    common_name: networkPolicyCA
+- name: network_policy_server
+  type: certificate
+  options:
+    ca: network_policy_ca
+    common_name: policy-server.service.cf.internal
+    ext_key_usage:
+    - server_auth
+- name: network_policy_client
+  type: certificate
+  options:
+    ca: network_policy_ca
+    common_name: clientName
+    ext_key_usage:
+    - client_auth
 - name: etcd_ca
   type: certificate
   options:
@@ -1642,6 +1771,8 @@ releases:
   url: https://bosh.io/d/github.com/cloudfoundry/staticfile-buildpack-release?v=1.3.13
   version: 1.3.13
   sha1: 0741ad6d39cf258c317151e1227e0ccfe1fd7579
+- name: netman
+  version: latest
 stemcells:
 - alias: default
   os: ubuntu-trusty
