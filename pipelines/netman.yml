groups:
- name: netman
  jobs:
  - netman-tests-mysql
  - netman-tests-postgres
  - pickelhelm-deploy
  - pickelhelm-test
  - mitre-deploy
  - mitre-test
  - mitre-cats
  - netman-shipit
  - netman-bump-minor-version
  - netman-merge-master
- name: toque
  jobs:
  - toque-deploy
  - toque-push
  - toque-test
- name: uberzug
  jobs:
  - uberzug-deploy
  - uberzug-gats
- name: cleanup
  jobs:
    - delete-deployment-uberzug
    - delete-deployment-mitre-cf
    - delete-deployment-mitre-diego
    - delete-deployment-pickelhelm-cf
    - delete-deployment-pickelhelm-diego
    - delete-deployment-toque-cf
    - delete-deployment-toque-diego
- name: trucker
  jobs:
  - trucker-test-upgrade
- name: version
  jobs:
  - major-bump
  - minor-bump
  - patch-bump

resources:
  ###### Deployments
  - name: uberzug
    type: bosh-deployment
    source:
      target: {{uberzug-bosh-host}}
      username: admin
      password: {{uberzug-password}}
      deployment: netman
  - name: pickelhelm-cf
    type: bosh-deployment
    source:
      target: {{pickelhelm-bosh-host}}
      username: admin
      password: {{pickelhelm-bosh-password}}
      deployment: cf-diego
  - name: pickelhelm-diego
    type: bosh-deployment
    source:
      target: {{pickelhelm-bosh-host}}
      username: admin
      password: {{pickelhelm-bosh-password}}
      deployment: cf-diego-diego
  - name: mitre-cf
    type: bosh-deployment
    source:
      target: {{mitre-bosh-host}}
      username: admin
      password: {{mitre-bosh-password}}
      deployment: mitre
  - name: mitre-diego
    type: bosh-deployment
    source:
      target: {{mitre-bosh-host}}
      username: admin
      password: {{mitre-bosh-password}}
      deployment: mitre-diego
  - name: toque-cf
    type: bosh-deployment
    source:
      target: {{toque-bosh-host}}
      username: admin
      password: {{toque-bosh-password}}
      deployment: toque
  - name: toque-diego
    type: bosh-deployment
    source:
      target: {{toque-bosh-host}}
      username: admin
      password: {{toque-bosh-password}}
      deployment: toque-diego
  ###### Control plane
  - name: container-networking-ci
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/container-networking-ci
  - name: toque-scaling-deploy
    type: git
    source:
      uri: https://github.com/cf-container-networking/toque-scaling
      paths: [ deploy ]
  - name: uberzug-config
    type: git
    source:
      uri: "git@github.com:cloudfoundry/container-networking-deployments.git"
      branch: master
      private_key: {{container-networking-deployments-deploy-key}}
      paths: [ environments/uberzug ]
  - name: pickelhelm-config
    type: git
    source:
      uri: "git@github.com:cloudfoundry/container-networking-deployments.git"
      branch: master
      private_key: {{container-networking-deployments-deploy-key}}
      paths: [ environments/pickelhelm ]
  - name: mitre-config
    type: git
    source:
      uri: "git@github.com:cloudfoundry/container-networking-deployments.git"
      branch: master
      private_key: {{container-networking-deployments-deploy-key}}
      paths: [ environments/mitre ]
  - name: toque-config
    type: git
    source:
      uri: "git@github.com:cloudfoundry/container-networking-deployments.git"
      branch: master
      private_key: {{container-networking-deployments-deploy-key}}
      paths: [ environments/toque ]
  - name: trucker-config
    type: git
    source:
      uri: "git@github.com:cloudfoundry/container-networking-deployments.git"
      branch: master
      private_key: {{container-networking-deployments-deploy-key}}
      paths: [ environments/trucker ]
  - name: container-networking-deployments
    type: git
    source:
      uri: "git@github.com:cloudfoundry/container-networking-deployments.git"
      branch: master
      private_key: {{container-networking-deployments-deploy-key}}
  - name: runtime-ci
    type: git
    source:
      uri: git://github.com/cloudfoundry/runtime-ci
  ###### BOSH stemcells
  - name: aws-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
  ###### BOSH release repos
  - name: cf-release-master
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry/cf-release.git
  - name: diego-release
    type: git
    source:
      branch: develop
      uri: https://github.com/cloudfoundry/diego-release.git
  - name: netman-release-dev
    type: git
    source:
      uri: git@github.com:cloudfoundry-incubator/netman-release.git
      branch: develop
      private_key: {{netman-release-deploy-key}}
  - name: netman-release-master
    type: git
    source:
      uri: git@github.com:cloudfoundry-incubator/netman-release.git
      branch: master
      private_key: {{netman-release-deploy-key}}
  - name: garden-runc-release
    type: git
    source:
      uri: git://github.com/cloudfoundry/garden-runc-release
      branch: master
  ###### BOSH release tarballs
  - name: rootfs-release-tarball
    type: bosh-io-release
    source:
      repository: cloudfoundry/cflinuxfs2-rootfs-release
  - name: etcd-release-tarball
    type: bosh-io-release
    source:
      repository: cloudfoundry-incubator/etcd-release
  - name: diego-release-tarball
    type: bosh-io-release
    source:
      repository: cloudfoundry/diego-release
  - name: cf-release-tarball
    type: bosh-io-release
    source:
      repository: cloudfoundry/cf-release
  - name: garden-runc-release-tarball
    type: bosh-io-release
    source:
      repository: cloudfoundry/garden-runc-release
  ####### Stats
  - name: mitre-stats
    type: git
    source:
      uri: "git@github.com:cf-container-networking/mitre-stats.git"
      branch: master
      private_key: {{mitre-stats-deploy-key}}
  - name: toque-stats
    type: git
    source:
      uri: "git@github.com:cf-container-networking/toque-stats.git"
      branch: master
      private_key: {{toque-stats-deploy-key}}
  ####### Timers
  - name: after-midnight
    type: time
    source:
      start: 12:00 AM -0700
      stop: 1:00 AM -0700
  - name: every-half-hour
    type: time
    source:
      interval: 30m
  - name: every-six-hours
    type: time
    source:
      interval: 6h
  ####### Tests
  - name: cf-acceptance-tests
    type: git
    source:
      branch: with-c2c-patches
      uri: git://github.com/cf-container-networking/cf-acceptance-tests.git
  - name: toque-scaling-test-params
    type: git
    source:
      uri: https://github.com/cf-container-networking/toque-scaling
      paths: [ test-params ]
  #######  Release management
  - name: version
    type: semver
    source:
      bucket: {{netman-release-s3-bucket}}
      region_name: us-west-2
      initial_version: 0.2.0-rc.1
      key: releases/current-version
      access_key_id: {{aws-access-key-id}}
      secret_access_key: {{aws-secret-access-key}}
  - name: netman-tarball
    type: s3
    source:
      bucket: {{netman-candidate-s3-bucket}}
      region_name: us-west-2
      regexp: releases/netman-(.*).tgz
      access_key_id: {{aws-access-key-id}}
      secret_access_key: {{aws-secret-access-key}}
  # Github release
  - name: netman-github-release
    type: github-release
    source:
      user: cloudfoundry-incubator
      repository: netman-release
      access_token: {{github-access-token}}
      drafts: true
  - name: cf-deployment
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry/cf-deployment.git

jobs:
  - name: netman-tests-postgres
    public: true
    plan:
      - get: netman-release
        resource: netman-release-dev
        trigger: true
      - task: netman-tests
        file: netman-release/ci/netman-tests-postgres.yml
        privileged: true

  - name: netman-tests-mysql
    public: true
    plan:
      - get: netman-release
        resource: netman-release-dev
        trigger: true
      - task: netman-tests
        file: netman-release/ci/netman-tests-mysql.yml
        privileged: true

  - name: uberzug-deploy
    public: true
    serial: true
    serial_groups: [uberzug]
    plan:
      - aggregate:
        - get: container-networking-ci
          trigger: false
        - get: uberzug-config
          trigger: true
        - get: aws-stemcell
          trigger: true
        - get: garden-runc-release
          trigger: true
        - get: garden-runc-release-tarball
          trigger: true
        - get: etcd-release-tarball
        - get: netman-release
          resource: netman-release-dev
          params: { submodules: all }
          trigger: true
          passed: [netman-tests-postgres, netman-tests-mysql]
      - task: create-release-tarball
        file: netman-release/ci/create-release-tarball.yml
      - put: uberzug
        params:
          cleanup: true
          manifest: uberzug-config/environments/uberzug/uberzug.yml
          stemcells:
          - aws-stemcell/*.tgz
          releases:
          - garden-runc-release-tarball/*.tgz
          - etcd-release-tarball/*.tgz
          - tarballs/*.tgz

  - name: uberzug-gats
    public: true
    serial_groups: [uberzug]
    plan:
      - aggregate:
        - get: garden-runc-release
          passed: [uberzug-deploy]
        - get: garden-runc-release-tarball
          passed: [uberzug-deploy]
        - get: container-networking-ci
          trigger: false
        - get: environment
          resource: uberzug
          passed: [uberzug-deploy]
          trigger: true
      - task: garden-integration-tests
        file: garden-runc-release/ci/non-nested-gats.yml
        input_mapping: {gr-release-develop: garden-runc-release}
        params:
          GARDEN_ADDRESS: 10.0.1.12:7777

  - name: pickelhelm-deploy
    serial_groups: [pickelhelm]
    plan:
      - aggregate:
        - get: container-networking-ci
          trigger: false
        - get: config-repo
          resource: container-networking-ci
        - get: deployments-repo
          resource: pickelhelm-config
          trigger: false
        - get: cf-release
          resource: cf-release-master
          params: { submodules: none }
        - get: diego-release
          params: { submodules: none }
        - get: aws-stemcell
          trigger: true
        - get: rootfs-release-tarball
        - get: cf-release-tarball
          trigger: true
        - get: diego-release-tarball
          trigger: true
        - get: garden-runc-release-tarball
          trigger: true
        - get: netman-release
          resource: netman-release-dev
          trigger: true
          passed: [netman-tests-postgres, netman-tests-mysql]
        - get: etcd-release-tarball
      - aggregate:
        - task: create-release-tarball
          file: netman-release/ci/create-release-tarball.yml
        - task: generate-pickelhelm-manifests
          file: container-networking-ci/tasks/generate-deployment-manifests.yml
          params:
            ENVIRONMENT_NAME: pickelhelm
      - put: pickelhelm-cf
        params:
          cleanup: false
          manifest: generated-manifest/cf.yml
          stemcells:
          - aws-stemcell/*.tgz
          releases:
          - cf-release-tarball/*.tgz
      - put: pickelhelm-diego
        params:
          cleanup: false
          manifest: generated-manifest/diego.yml
          stemcells:
          - aws-stemcell/*.tgz
          releases:
          - tarballs/*.tgz
          - garden-runc-release-tarball/*.tgz
          - etcd-release-tarball/*.tgz
          - rootfs-release-tarball/*.tgz
          - diego-release-tarball/*.tgz

  - name: pickelhelm-test
    serial_groups: [pickelhelm]
    plan:
      - aggregate:
        - get: container-networking-ci
        - get: deployments-repo
          resource: pickelhelm-config
          trigger: false
        - get: test-config
          resource: pickelhelm-config
          trigger: false
        - get: diego-release
          params: { submodules: none }
          passed: [pickelhelm-deploy]
          trigger: true
        - get: cf-release
          resource: cf-release-master
          params: { submodules: none }
          passed: [pickelhelm-deploy]
          trigger: true
        - get: garden-runc-release-tarball
          passed: [pickelhelm-deploy]
          trigger: true
        - get: netman-release
          resource: netman-release-dev
          passed: [pickelhelm-deploy]
          trigger: true
        - get: cf-deployment
          resource: pickelhelm-cf
          passed: [pickelhelm-deploy]
        - get: environment
          resource: pickelhelm-diego
          passed: [pickelhelm-deploy]
          trigger: true
        - get: aws-stemcell
          passed: [pickelhelm-deploy]
        - get: rootfs-release-tarball
          passed: [pickelhelm-deploy]
        - get: diego-release-tarball
          passed: [pickelhelm-deploy]
        - get: etcd-release-tarball
          passed: [pickelhelm-deploy]
      - task: netman-cf-acceptance
        file: container-networking-ci/tasks/netman-cf-acceptance.yml
        params:
          ENVIRONMENT_NAME: pickelhelm

  - name: mitre-deploy
    serial_groups: [mitre, version]
    plan:
      - aggregate:
        - get: container-networking-ci
          trigger: false
        - get: config-repo
          resource: container-networking-ci
        - get: deployments-repo
          resource: mitre-config
          trigger: false
        - get: cf-release
          resource: cf-release-master
          params: { submodules: none }
        - get: diego-release
          params: { submodules: none }
        - get: aws-stemcell
          trigger: false
        - get: rootfs-release-tarball
        - get: diego-release-tarball
          trigger: false
        - get: cf-release-tarball
          trigger: false
        - get: garden-runc-release-tarball
          trigger: false
          passed: [pickelhelm-test]
        - get: netman-release
          resource: netman-release-dev
          trigger: false
          passed: [pickelhelm-test]
        - get: version
          params: { pre: rc }
        - get: etcd-release-tarball
      - aggregate:
        - task: create-release-tarball
          file: netman-release/ci/create-release.yml
        - task: generate-mitre-manifests
          file: container-networking-ci/tasks/generate-deployment-manifests.yml
          params:
            ENVIRONMENT_NAME: mitre
      - put: netman-tarball
        params:
          from: tarballs/netman-([^/]*).tgz
          to: releases/
      - put: version
        params: {file: version/number}
      - put: mitre-cf
        params:
          cleanup: false
          manifest: generated-manifest/cf.yml
          stemcells:
          - aws-stemcell/*.tgz
          releases:
          - cf-release-tarball/*.tgz
      - put: mitre-diego
        params:
          cleanup: false
          manifest: generated-manifest/diego.yml
          stemcells:
          - aws-stemcell/*.tgz
          releases:
          - tarballs/*.tgz
          - garden-runc-release-tarball/*.tgz
          - etcd-release-tarball/*.tgz
          - rootfs-release-tarball/*.tgz
          - diego-release-tarball/*.tgz
      - task: add-acceptance-space-developer
        file: container-networking-ci/tasks/add-space-developer.yml
        params:
          API: {{mitre-cf-api}}
          ADMIN_PASSWORD: {{mitre-cf-admin-password}}
          SPACE_NAME: Acceptance
          USER: acceptance
      - task: add-spring-space-developer
        file: container-networking-ci/tasks/add-space-developer.yml
        params:
          API: {{mitre-cf-api}}
          ADMIN_PASSWORD: {{mitre-cf-admin-password}}
          SPACE_NAME: Spring
          USER: spring-test
      - task: add-data-space-developer
        file: container-networking-ci/tasks/add-space-developer.yml
        params:
          API: {{mitre-cf-api}}
          ADMIN_PASSWORD: {{mitre-cf-admin-password}}
          SPACE_NAME: Data
          USER: data-test
      - task: add-gemfire-space-developer
        file: container-networking-ci/tasks/add-space-developer.yml
        params:
          API: {{mitre-cf-api}}
          ADMIN_PASSWORD: {{mitre-cf-admin-password}}
          SPACE_NAME: GemFire
          USER: gemfire-test

  - name: mitre-cats
    serial_groups: [mitre]
    plan:
      - aggregate:
        - get: after-midnight
          trigger: true
        - get: cf-acceptance-tests
          resource: cf-acceptance-tests
        - get: runtime-ci
          params: { submodules: none }
        - get: netman-release
          resource: netman-release-dev
          passed: [mitre-test]
        - get: environment
          resource: mitre-cf
          passed: [mitre-test]
        - get: diego-environment
          resource: mitre-diego
          passed: [mitre-test]
      - task: cats
        file: runtime-ci/scripts/ci/run-cats/task.yml

  - name: mitre-test
    serial_groups: [mitre]
    plan:
      - aggregate:
        - get: deployments-repo
          resource: mitre-config
          trigger: false
        - get: test-config
          resource: mitre-config
          trigger: false
        - get: diego-release
          params: { submodules: none }
          passed: [mitre-deploy]
          trigger: true
        - get: cf-release
          resource: cf-release-master
          params: { submodules: none }
          passed: [mitre-deploy]
          trigger: true
        - get: garden-runc-release-tarball
          passed: [mitre-deploy]
          trigger: true
        - get: netman-release
          resource: netman-release-dev
          passed: [mitre-deploy]
          trigger: true
        - get: netman-tarball
          passed: [mitre-deploy]
        - get: version
          passed: [mitre-deploy]
        - get: container-networking-ci
        - get: cf-deployment
          resource: mitre-cf
          passed: [mitre-deploy]
        - get: environment
          resource: mitre-diego
          passed: [mitre-deploy]
          trigger: true
        - get: mitre-stats
      - task: netman-cf-acceptance
        file: container-networking-ci/tasks/netman-cf-acceptance.yml
        params:
          ENVIRONMENT_NAME: mitre
      - task: commit-stats
        file: container-networking-ci/tasks/commit-new-file.yml
        input_mapping:
          input_repo: mitre-stats
          source: network-stats
        output_mapping: {output_repo: stats_output}
        params:
          SOURCE_FILE: stats.json
          DEST_SUFFIX: json
      - put: mitre-stats
        params: {repository: stats_output}

  - name: toque-deploy
    serial_groups: [toque]
    plan:
      - aggregate:
        - get: container-networking-ci
        - get: deployments-repo
          resource: toque-config
        - get: cf-release
          resource: cf-release-master
          params: { submodules: none }
        - get: diego-release
          params: { submodules: none }
        - get: aws-stemcell
        - get: rootfs-release-tarball
        - get: diego-release-tarball
        - get: cf-release-tarball
        - get: garden-runc-release-tarball
        - get: netman-release
          resource: netman-release-dev
          passed: [netman-tests-postgres, netman-tests-mysql]
          trigger: true
        - get: etcd-release-tarball
        - get: scaling-deploy
          resource: toque-scaling-deploy
      - aggregate:
        - task: create-release-tarball
          file: netman-release/ci/create-release-tarball.yml
        - task: set-scaling-deploy
          file: container-networking-ci/tasks/set-scaling-deploy.yml
      - task: generate-toque-manifests
        file: container-networking-ci/tasks/generate-deployment-manifests.yml
        params:
          ENVIRONMENT_NAME: toque
      - put: toque-cf
        params:
          cleanup: false
          manifest: generated-manifest/cf.yml
          stemcells:
          - aws-stemcell/*.tgz
          releases:
          - cf-release-tarball/*.tgz
      - put: toque-diego
        params:
          cleanup: false
          manifest: generated-manifest/diego.yml
          stemcells:
          - aws-stemcell/*.tgz
          releases:
          - tarballs/*.tgz
          - garden-runc-release-tarball/*.tgz
          - etcd-release-tarball/*.tgz
          - rootfs-release-tarball/*.tgz
          - diego-release-tarball/*.tgz

  - name: toque-push
    serial_groups: [toque]
    plan:
      - aggregate:
        - get: deployments-repo
          resource: toque-config
        - get: netman-release
          resource: netman-release-dev
          passed: [toque-deploy]
          trigger: true
        - get: container-networking-ci
        - get: scaling-test-params
          resource: toque-scaling-test-params
          trigger: true
      - task: set-scaling-test-params
        file: container-networking-ci/tasks/set-scaling-test-params.yml
        params:
          ENVIRONMENT_NAME: toque
      - task: push-apps
        file: container-networking-ci/tasks/push-apps.yml
        params:
          ENVIRONMENT_NAME: toque

  - name: toque-test
    serial_groups: [toque]
    plan:
      - aggregate:
        - get: every-half-hour
          trigger: true
        - get: deployments-repo
          resource: toque-config
        - get: netman-release
          resource: netman-release-dev
          passed: [toque-push]
        - get: container-networking-ci
        - get: cf-deployment
          resource: toque-cf
        - get: environment
          resource: toque-diego
        - get: scaling-test-params
          resource: toque-scaling-test-params
          passed: [toque-push]
        - get: toque-stats
      - task: set-scaling-test-params
        file: container-networking-ci/tasks/set-scaling-test-params.yml
        params:
          ENVIRONMENT_NAME: toque
      - task: emit-datadog-test-start
        file: container-networking-ci/tasks/emit-datadog-event.yml
        params:
          TITLE: test_start
          TEXT: test_start
          PRIORITY: normal
          AWS_ENV: toque-diego
          DATADOG_API_KEY: {{datadog_api_key}}
      - task: test-scalability
        file: container-networking-ci/tasks/test-scalability.yml
        params:
          ENVIRONMENT_NAME: toque
      - task: emit-datadog-test-stop
        file: container-networking-ci/tasks/emit-datadog-event.yml
        params:
          TITLE: test_end
          TEXT: test_end
          PRIORITY: normal
          AWS_ENV: toque-diego
          DATADOG_API_KEY: {{datadog_api_key}}
      - task: commit-stats
        file: container-networking-ci/tasks/commit-new-file.yml
        input_mapping:
          input_repo: toque-stats
          source: network-stats
        output_mapping: {output_repo: stats_output}
        params:
          SOURCE_FILE: stats.json
          DEST_SUFFIX: json
      - put: toque-stats
        params: {repository: stats_output}

  - name: trucker-test-upgrade
    serial_groups: [trucker]
    plan:
      - aggregate:
        - get: every-six-hours
          trigger: true
        - get: test-config
          resource: trucker-config
        - get: container-networking-ci
        - get: deployments-repo
          resource: trucker-config
        - get: cf-deployment
        - get: netman-release
          resource: netman-release-dev
          passed: [pickelhelm-test]
      - task: create-release-tarball
        file: netman-release/ci/create-release-tarball.yml
      - task: upload-netman-release
        file: container-networking-ci/tasks/upload-release-tarball.yml
        params:
          ENVIRONMENT_NAME: trucker
      - task: generate-upgrade-manifests
        file: container-networking-ci/tasks/generate-upgrade-manifests.yml
        params:
          ENVIRONMENT_NAME: trucker
      - task: test-upgrade
        file: container-networking-ci/tasks/test-upgrade.yml
        params:
          ENVIRONMENT_NAME: trucker
          BASE_MANIFEST: deployment-manifests/plain.yml
          UPGRADE_MANIFEST: deployment-manifests/with-netman.yml


##### Human-triggered utilities
  - name: delete-deployment-uberzug
    public: true
    serial_groups: [uberzug]
    plan:
      - get: container-networking-ci
      - task: delete-deployment
        file: container-networking-ci/tasks/delete-deployment.yml
        params:
          BOSH_TARGET: {{uberzug-bosh-host}}
          BOSH_USER: admin
          BOSH_PASSWORD: {{uberzug-password}}
          DEPLOYMENT_NAME: netman
  - name: delete-deployment-pickelhelm-diego
    public: true
    serial_groups: [pickelhelm]
    plan:
      - get: container-networking-ci
      - task: delete-deployment
        file: container-networking-ci/tasks/delete-deployment.yml
        params:
          BOSH_TARGET: {{pickelhelm-bosh-host}}
          BOSH_USER: admin
          BOSH_PASSWORD: {{pickelhelm-bosh-password}}
          DEPLOYMENT_NAME: cf-diego-diego
  - name: delete-deployment-pickelhelm-cf
    public: true
    serial_groups: [pickelhelm]
    plan:
      - get: container-networking-ci
      - task: delete-deployment
        file: container-networking-ci/tasks/delete-deployment.yml
        params:
          BOSH_TARGET: {{pickelhelm-bosh-host}}
          BOSH_USER: admin
          BOSH_PASSWORD: {{pickelhelm-bosh-password}}
          DEPLOYMENT_NAME: cf-diego
  - name: delete-deployment-mitre-diego
    public: true
    serial_groups: [mitre]
    plan:
      - get: container-networking-ci
      - task: delete-deployment
        file: container-networking-ci/tasks/delete-deployment.yml
        params:
          BOSH_TARGET: {{mitre-bosh-host}}
          BOSH_USER: admin
          BOSH_PASSWORD: {{mitre-bosh-password}}
          DEPLOYMENT_NAME: mitre-diego
  - name: delete-deployment-mitre-cf
    public: true
    serial_groups: [mitre]
    plan:
      - get: container-networking-ci
      - task: delete-deployment
        file: container-networking-ci/tasks/delete-deployment.yml
        params:
          BOSH_TARGET: {{mitre-bosh-host}}
          BOSH_USER: admin
          BOSH_PASSWORD: {{mitre-bosh-password}}
          DEPLOYMENT_NAME: mitre
  - name: delete-deployment-toque-diego
    public: true
    serial_groups: [toque]
    plan:
      - get: container-networking-ci
      - task: delete-deployment
        file: container-networking-ci/tasks/delete-deployment.yml
        params:
          BOSH_TARGET: {{toque-bosh-host}}
          BOSH_USER: admin
          BOSH_PASSWORD: {{toque-bosh-password}}
          DEPLOYMENT_NAME: toque-diego
  - name: delete-deployment-toque-cf
    public: true
    serial_groups: [toque]
    plan:
      - get: container-networking-ci
      - task: delete-deployment
        file: container-networking-ci/tasks/delete-deployment.yml
        params:
          BOSH_TARGET: {{toque-bosh-host}}
          BOSH_USER: admin
          BOSH_PASSWORD: {{toque-bosh-password}}
          DEPLOYMENT_NAME: toque

  - name: netman-shipit
    serial_groups: [version]
    plan:
    - do:
      - aggregate:
        - get: container-networking-deployments
        - get: container-networking-ci
        - get: version
          params:
            bump: final
          passed: [mitre-test]
        - get: netman-release
          resource: netman-release-dev
          params:
            fetch: [master]
            submodules: none
          passed: [mitre-test]
        - get: netman-tarball
          passed: [mitre-test]
      - task: shipit
        file: container-networking-ci/tasks/shipit.yml
      - task: build-cli
        file: container-networking-ci/tasks/netman-build-cli.yml
      - put: version
        params: {file: version/number}
      - put: netman-release-master
        params:
          repository: release/master
          tag: version/number
          tag_prefix: v
      - put: netman-tarball
        params:
          from: final-release/netman-([^/]*).tgz
          to: releases/
      - task: build-release-notes
        file: container-networking-ci/tasks/build-release-notes.yml
      - put: netman-github-release
        params:
          name: version/number
          tag: version/number
          body: release-notes/notes.md
          tag_prefix: v
          globs:
          - final-release/netman-*.tgz
          - binaries/network-policy-plugin-*

  # bump minor version (i.e. 0.1.0 -> 0.2.0)
  - name: netman-bump-minor-version
    serial_groups: [version]
    plan:
    - aggregate:
      - get: version
        trigger: true
        passed: [netman-shipit]
        params: {bump: minor, pre: rc}
    - put: version
      params: {file: version/number}

  # merge master back to develop
  - name: netman-merge-master
    plan:
    - do:
      - aggregate:
        - get: container-networking-ci
        - get: netman-release-master
          params:
            submodules: none
            fetch: [develop]
          passed: [netman-shipit]
          trigger: true
        - get: netman-release-dev
          params: {submodules: none}
      - task: merge-master
        file: container-networking-ci/tasks/merge-master.yml
      - put: netman-release-dev
        params: {repository: release-merged}

  # versioning
  - name: patch-bump
    serial_groups: [version]
    plan:
    - get: version
      params: {bump: patch}
    - put: version
      params: {file: version/number}

  - name: minor-bump
    serial_groups: [version]
    plan:
    - get: version
      params: {bump: minor}
    - put: version
      params: {file: version/number}

  - name: major-bump
    serial_groups: [version]
    plan:
    - get: version
      params: {bump: major}
    - put: version
      params: {file: version/number}
