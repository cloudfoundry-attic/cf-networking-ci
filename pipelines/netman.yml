resources:
  ###### Deployments
  - name: pickelhelm-cf
    type: bosh-deployment
    source:
      target: {{pickelhelm-bosh-host}}
      username: admin
      password: {{pickelhelm-bosh-password}}
      deployment: cf-diego
  - name: pickelhelm-diego
    type: bosh-deployment
    source:
      target: {{pickelhelm-bosh-host}}
      username: admin
      password: {{pickelhelm-bosh-password}}
      deployment: cf-diego-diego
  - name: mitre-cf
    type: bosh-deployment
    source:
      target: {{mitre-bosh-host}}
      username: admin
      password: {{mitre-bosh-password}}
      deployment: mitre
  - name: mitre-diego
    type: bosh-deployment
    source:
      target: {{mitre-bosh-host}}
      username: admin
      password: {{mitre-bosh-password}}
      deployment: mitre-diego
  ###### Control plane
  - name: container-networking-ci
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/container-networking-ci
  - name: pickelhelm-config
    type: git
    source:
      uri: "git@github.com:cloudfoundry/container-networking-deployments.git"
      branch: master
      private_key: {{container-networking-deployments-deploy-key}}
      paths: [ environments/pickelhelm ]
  - name: mitre-config
    type: git
    source:
      uri: "git@github.com:cloudfoundry/container-networking-deployments.git"
      branch: master
      private_key: {{container-networking-deployments-deploy-key}}
      paths: [ environments/mitre ]
  - name: uberzug-config
    type: git
    source:
      uri: "git@github.com:cloudfoundry/container-networking-deployments.git"
      branch: master
      private_key: {{container-networking-deployments-deploy-key}}
      paths: [ environments/uberzug ]
  ###### BOSH stemcells
  - name: aws-4-4-stemcell
    type: s3
    source:
      bucket: c2c-stemcells
      region_name: us-west-2
      versioned_file: bosh-stemcell-3232.kernel-4.4-aws-xen-ubuntu-trusty-go_agent.tgz
  ###### BOSH release repos
  - name: cf-release
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry/cf-release.git
  - name: diego-release
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry-incubator/diego-release.git
  - name: netman-release
    type: git
    source:
      uri: git://github.com/cloudfoundry-incubator/netman-release
      branch: master
  - name: garden-runc-release
    type: git
    source:
      uri: git://github.com/cloudfoundry-incubator/garden-runc-release
      branch: master
  ###### BOSH release tarballs
  - name: rootfs-release-tarball
    type: bosh-io-release
    source:
      repository: cloudfoundry/cflinuxfs2-rootfs-release
  - name: consul-release-tarball
    type: bosh-io-release
    source:
      repository: cloudfoundry-incubator/consul-release
  - name: etcd-release-tarball
    type: bosh-io-release
    source:
      repository: cloudfoundry-incubator/etcd-release
  - name: diego-release-tarball
    type: bosh-io-release
    source:
      repository: cloudfoundry-incubator/diego-release
  - name: cf-release-tarball
    type: bosh-io-release
    source:
      repository: cloudfoundry/cf-release
  - name: garden-runc-release-tarball
    type: bosh-io-release
    source:
      repository: cloudfoundry-incubator/garden-runc-release
  ###### Integrations
  - name: deliver-story
    type: tracker
    source:
      token: {{tracker_api_token}}
      project_id: "1498342"
      tracker_url: https://www.pivotaltracker.com


jobs:
  - name: netman-tests-postgres
    public: true
    plan:
      - get: netman-release
        trigger: true
      - task: netman-tests
        file: netman-release/ci/netman-tests-postgres.yml
        privileged: true

  - name: netman-tests-mysql
    public: true
    plan:
      - get: netman-release
        trigger: true
      - task: netman-tests
        file: netman-release/ci/netman-tests-mysql.yml
        privileged: true

  - name: pickelhelm-deploy
    serial_groups: [pickelhelm]
    plan:
      - aggregate:
        - get: container-networking-ci
          trigger: false
        - get: deployments-repo
          resource: pickelhelm-config
          trigger: false
        - get: cf-release
          params: { submodules: none }
        - get: diego-release
          params: { submodules: none }
        - get: aws-4-4-stemcell
          trigger: true
        - get: rootfs-release-tarball
        - get: cf-release-tarball
          trigger: true
        - get: diego-release-tarball
          trigger: true
        - get: garden-runc-release-tarball
          trigger: true
        - get: netman-release
          trigger: true
          passed: [netman-tests-postgres, netman-tests-mysql]
        - get: etcd-release-tarball
      - aggregate:
        - task: create-release-tarball
          file: netman-release/ci/create-release-tarball.yml
        - task: generate-pickelhelm-manifests
          file: container-networking-ci/tasks/generate-deployment-manifests.yml
          params:
            ENVIRONMENT_NAME: pickelhelm
      - put: pickelhelm-cf
        params:
          cleanup: true
          manifest: generated-manifest/cf.yml
          stemcells:
          - aws-4-4-stemcell/*.tgz
          releases:
          - cf-release-tarball/*.tgz
      - put: pickelhelm-diego
        params:
          cleanup: true
          manifest: generated-manifest/diego.yml
          stemcells:
          - aws-4-4-stemcell/*.tgz
          releases:
          - tarballs/*.tgz
          - garden-runc-release-tarball/*.tgz
          - etcd-release-tarball/*.tgz
          - rootfs-release-tarball/*.tgz
          - diego-release-tarball/*.tgz

  - name: pickelhelm-test
    serial_groups: [pickelhelm]
    plan:
      - aggregate:
        - get: diego-release
          params: { submodules: none }
          passed: [pickelhelm-deploy]
          trigger: true
        - get: cf-release
          params: { submodules: none }
          passed: [pickelhelm-deploy]
          trigger: true
        - get: garden-runc-release-tarball
          passed: [pickelhelm-deploy]
          trigger: true
        - get: netman-release
          passed: [pickelhelm-deploy]
          trigger: true
      - get: container-networking-ci
      - get: environment
        resource: pickelhelm-diego
        passed: [pickelhelm-deploy]
        trigger: true
      - task: netman-cf-acceptance
        file: container-networking-ci/tasks/run-errand.yml
        params:
          BOSH_PASSWORD: {{pickelhelm-bosh-password}}
          ERRAND: netman-cf-acceptance

  - name: mitre-deploy
    serial_groups: [mitre]
    plan:
      - aggregate:
        - get: container-networking-ci
          trigger: false
        - get: deployments-repo
          resource: mitre-config
          trigger: false
        - get: cf-release
          params: { submodules: none }
        - get: diego-release
          params: { submodules: none }
        - get: aws-4-4-stemcell
          trigger: false
        - get: rootfs-release-tarball
        - get: cf-release-tarball
          trigger: false
        - get: diego-release-tarball
          trigger: false
        - get: garden-runc-release-tarball
          trigger: false
          passed: [pickelhelm-test]
        - get: netman-release
          trigger: false
          passed: [pickelhelm-test]
        - get: etcd-release-tarball
      - aggregate:
        - task: create-release-tarball
          file: netman-release/ci/create-release-tarball.yml
        - task: generate-mitre-manifests
          file: container-networking-ci/tasks/generate-deployment-manifests.yml
          params:
            ENVIRONMENT_NAME: mitre
      - put: mitre-cf
        params:
          cleanup: true
          manifest: generated-manifest/cf.yml
          stemcells:
          - aws-4-4-stemcell/*.tgz
          releases:
          - cf-release-tarball/*.tgz
      - put: mitre-diego
        params:
          cleanup: true
          manifest: generated-manifest/diego.yml
          stemcells:
          - aws-4-4-stemcell/*.tgz
          releases:
          - tarballs/*.tgz
          - garden-runc-release-tarball/*.tgz
          - etcd-release-tarball/*.tgz
          - rootfs-release-tarball/*.tgz
          - diego-release-tarball/*.tgz

  - name: mitre-test
    serial_groups: [mitre]
    plan:
      - aggregate:
        - get: diego-release
          params: { submodules: none }
          passed: [mitre-deploy]
          trigger: true
        - get: cf-release
          params: { submodules: none }
          passed: [mitre-deploy]
          trigger: true
        - get: garden-runc-release-tarball
          passed: [mitre-deploy]
          trigger: true
        - get: netman-release
          passed: [mitre-deploy]
          trigger: true
      - get: container-networking-ci
      - get: environment
        resource: mitre-diego
        passed: [mitre-deploy]
        trigger: true
      - task: netman-cf-acceptance
        file: container-networking-ci/tasks/run-errand.yml
        params:
          BOSH_PASSWORD: {{mitre-bosh-password}}
          ERRAND: netman-cf-acceptance
      - put: deliver-story
        params:
          repos:
            - netman-release
            - container-networking-ci

##### Human-triggered utilities
  - name: delete-deployment-pickelhelm-diego
    public: true
    serial_groups: [pickelhelm]
    plan:
    plan:
      - get: container-networking-ci
      - task: delete-deployment
        file: container-networking-ci/tasks/delete-deployment.yml
        params:
          BOSH_TARGET: {{pickelhelm-bosh-host}}
          BOSH_USER: admin
          BOSH_PASSWORD: {{pickelhelm-bosh-password}}
          DEPLOYMENT_NAME: cf-diego-diego
  - name: delete-deployment-pickelhelm-cf
    public: true
    serial_groups: [pickelhelm]
    plan:
    plan:
      - get: container-networking-ci
      - task: delete-deployment
        file: container-networking-ci/tasks/delete-deployment.yml
        params:
          BOSH_TARGET: {{pickelhelm-bosh-host}}
          BOSH_USER: admin
          BOSH_PASSWORD: {{pickelhelm-bosh-password}}
          DEPLOYMENT_NAME: cf-diego
  - name: delete-deployment-mitre-diego
    public: true
    serial_groups: [mitre]
    plan:
    plan:
      - get: container-networking-ci
      - task: delete-deployment
        file: container-networking-ci/tasks/delete-deployment.yml
        params:
          BOSH_TARGET: {{mitre-bosh-host}}
          BOSH_USER: admin
          BOSH_PASSWORD: {{mitre-bosh-password}}
          DEPLOYMENT_NAME: mitre-diego
  - name: delete-deployment-mitre-cf
    public: true
    serial_groups: [mitre]
    plan:
    plan:
      - get: container-networking-ci
      - task: delete-deployment
        file: container-networking-ci/tasks/delete-deployment.yml
        params:
          BOSH_TARGET: {{mitre-bosh-host}}
          BOSH_USER: admin
          BOSH_PASSWORD: {{mitre-bosh-password}}
          DEPLOYMENT_NAME: mitre
