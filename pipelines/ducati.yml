resources:
  - name: guardian-release
    type: git
    source:
      uri: git://github.com/cloudfoundry-incubator/guardian-release
      branch: master
  - name: ducati-release
    type: git
    source:
      uri: git://github.com/cloudfoundry-incubator/ducati-release
      branch: master
  - name: bosh-io-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-warden-boshlite-ubuntu-trusty-go_agent
  - name: bosh-lite-environment
    type: bosh-deployment
    source:
      target: {{bosh-lite-private-ip}}
      username: admin
      password: {{bosh-lite-password}}
      deployment: ducati-guardian

jobs:
  - name: guardian-tests
    public: true
    plan:
      - get: guardian-release
        trigger: true
      - task: guardian-tests
        file: guardian-release/ci/guardian.yml
        privileged: true

  - name: ducati-tests
    public: true
    plan:
      - get: ducati-release
        trigger: true
      - task: ducati-tests
        file: ducati-release/ci/ducati-tests.yml
        privileged: true

  - name: deploy-to-bosh-lite
    serial_groups: [bosh-lite]
    plan:
      - aggregate:
        - get: bosh-io-stemcell
        - get: ducati-release
          trigger: true
          passed: [ducati-tests]
        - get: guardian-release
          trigger: true
          passed: [guardian-tests]
      - task: create-release-tarballs
        config:
          image_resource:
            type: docker-image
            source: { repository: c2cnetworking/ducati-deployment }
          platform: linux
          inputs:
          - name: ducati-release
          - name: guardian-release
          outputs:
          - name: tarballs
          run:
            path: bash
            args:
            - -c
            - |
              bosh create release --version $(date "+%s") --with-tarball --name ducati --dir ducati-release \
               && bosh create release --version $(date "+%s") --with-tarball --name guardian --dir guardian-release \
               && cp ducati-release/dev_releases/ducati/*.tgz tarballs \
               && cp guardian-release/dev_releases/guardian/*.tgz tarballs
      - task: prep-manifest
        config:
          image_resource:
            type: docker-image
            source: { repository: c2cnetworking/ducati-deployment }
          platform: linux
          inputs:
          - name: ducati-release
          outputs:
          - name: manifest
          run:
            path: bash
            args:
            - -c
            - |
              cat ducati-release/manifests/ducati-manifest.yml | grep -v director_uuid > manifest/manifest.yml
      - put: bosh-lite-environment
        params:
          cleanup: true
          manifest: manifest/manifest.yml
          stemcells:
          - bosh-io-stemcell/*.tgz
          releases:
          - tarballs/*.tgz

  - name: remote-acceptance-tests
    serial_groups: [bosh-lite]
    plan:
      - get: ducati-release
        trigger: true
        passed: [deploy-to-bosh-lite]
      - get: guardian-release
        trigger: true
        passed: [deploy-to-bosh-lite]
      - task: remote-acceptance-tests
        config:
          image_resource:
            type: docker-image
            source: { repository: c2cnetworking/ducati-deployment }
          platform: linux
          run:
            path: bash
            args:
            - -c
            - |
              bosh target $BOSH_TARGET && \
              bosh download manifest $DEPLOYMENT_NAME manifest.yml && \
              bosh deployment manifest.yml && \
              bosh run errand $ERRAND
          params:
            BOSH_TARGET: {{bosh-lite-private-ip}}
            DEPLOYMENT_NAME: ducati-guardian
            BOSH_USER: admin
            BOSH_PASSWORD: {{bosh-lite-password}}
            ERRAND: acceptance-tests
