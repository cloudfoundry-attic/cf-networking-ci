#!/bin/bash

set -e -u

pushd deployments-repo/environments/$ENVIRONMENT_NAME
  export BOSH_ENVIRONMENT=$(bbl director-address)
  bbl director-ca-cert > /tmp/ca.crt
  export BOSH_CA_CERT=/tmp/ca.crt
popd

VARS_STORE=deployments-repo/environments/${ENVIRONMENT_NAME}/vars-store.yml
MANIFEST_FILE=cf-deployment/cf-deployment.yml
AWS_OPS_FILE=cf-deployment/opsfiles/change-logging-port-for-aws-elb.yml
ENVIRONMENT_OPS_FILE=deployments-repo/environments/${ENVIRONMENT_NAME}/opsfile.yml
DIRECTOR_UUID=$(curl -s --cacert $BOSH_CA_CERT $BOSH_ENVIRONMENT/info | jq -r .uuid)

function makeManifest() {
  outFile=$1
  bosh-cli interpolate --var-errs \
    --vars-store=${VARS_STORE} \
    -o ${AWS_OPS_FILE} \
    -o ${ENVIRONMENT_OPS_FILE} \
    ${MANIFEST_FILE} > $outFile
  echo "director_uuid: ${DIRECTOR_UUID}" >> $outFile
}

echo "Applying patch"
pushd cf-deployment
  git apply ../container-networking-ci/netman-cf-deployment.patch
popd

echo "Making manifest"
makeManifest deployment-manifest/cf-with-netman.yml

echo "Checking for updates to var store"
pushd deployments-repo/environments/$ENVIRONMENT_NAME

  git checkout master
  # `|| true` because grep returns with exit status 1 if nothing is found
  CHANGED=`git ls-files -m | grep vars-store.yml || true`

  if [[ ! -z $CHANGED ]]; then
    echo ${CHANGED}

    echo "Setting git config"
    git config --global user.email "container-networking+ci@pivotal.io"
    git config --global user.name "Container Networking Bot"

    git add vars-store.yml
    git commit -m "[${ENVIRONMENT_NAME}] update vars store"
    git pull -r
  fi
popd
echo "Done"
